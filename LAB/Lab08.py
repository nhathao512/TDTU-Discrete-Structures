# -*- coding: utf-8 -*-
"""Lab08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vZPzcQuJyKbO7V07JncLZ72N5wL-ZQLu
"""

#Exercise 1
Andersen = {"The Emperor’s New Clothes", "The Little Mermaid", "The Little Match Girl", "The Snow Queen"}
print("Andersen:", Andersen)

#Exercise 2
Shakespeare = {"Romeo and Juliet", "Hamlet", "King Lear", "Macbeth", "A Midsummer Night’s Dream", "A Comedy of Errors"}
print("Shakespeare:", Shakespeare)

#Exercise 3
Tragedy = {"Medea", "Octavia", "Oedipus", "Ur-Hamlet"}
Comedy = {"The Three Musketeer", "The Clouds"}
Uncategory = {"Don Quixote", "Rapunzel", "Cinderella"}
print("Tragedy:", Tragedy)
print("Comedy:", Comedy)
print("Uncategory:", Uncategory)

#Exercise 4
Shakespeare_Tragedy = Shakespeare.difference(Tragedy)
print("Shakespeare_Tragedy:", Shakespeare_Tragedy)

#Exercise 5
Andersen_Comedy = Andersen.difference(Comedy)
print("Andersen_Comedy:", Andersen_Comedy)

#Exercise 6
relations = {
    "Andersen_Comedy": {
        "Shakespeare": Andersen_Comedy.issubset(Shakespeare),
        "Andersen": Andersen_Comedy.issubset(Andersen),
        "Tragedy": Andersen_Comedy.isdisjoint(Tragedy),
        "Comedy": Andersen_Comedy.isdisjoint(Comedy),
        "Uncategory": Andersen_Comedy.isdisjoint(Uncategory),
    },
    "Shakespeare_Tragedy": {
        "Shakespeare": Shakespeare_Tragedy.issubset(Shakespeare),
        "Andersen": Shakespeare_Tragedy.issubset(Andersen),
        "Tragedy": Shakespeare_Tragedy.issubset(Tragedy),
        "Comedy": Shakespeare_Tragedy.isdisjoint(Comedy),
        "Uncategory": Shakespeare_Tragedy.isdisjoint(Uncategory),
    }
}

print("Relations:")
for set_name, set_relations in relations.items():
    print(set_name)
    for relation, value in set_relations.items():
        print(f"  {relation}: {value}")

#Exercise 7
Work = Andersen.union(Shakespeare, Tragedy, Comedy, Uncategory)
print("Work:", Work)

#Exercise 8
Author = {"Hans Christian Andersen", "Shakespeare", "Unknown"}
print("Author:", Author)

#Exercise 9
Author_Of = {
    "The Emperor’s New Clothes": "Hans Christian Andersen",
    "The Little Mermaid": "Hans Christian Andersen",
    "The Little Match Girl": "Hans Christian Andersen",
    "The Snow Queen": "Hans Christian Andersen",
    "Romeo and Juliet": "Shakespeare",
    "Hamlet": "Shakespeare",
    "King Lear": "Shakespeare",
    "Macbeth": "Shakespeare",
    "A Midsummer Night’s Dream": "Shakespeare",
    "A Comedy of Errors": "Shakespeare",
    "Medea": "Unknown",
    "Octavia": "Unknown",
    "Oedipus": "Unknown",
    "Ur-Hamlet": "Unknown",
    "The Three Musketeer": "Unknown",
    "The Clouds": "Unknown",
    "Don Quixote": "Unknown",
    "Rapunzel": "Unknown",
    "Cinderella": "Unknown",
}

print("Author_Of:", Author_Of)

#Exercise 10
Written_By = {v: k for k, v in Author_Of.items()}
print("Written_By:", Written_By)

#Exercise 11
Work_Count = {}
for work in Work:
    count = sum(work in s for s in [Andersen, Shakespeare, Tragedy, Comedy, Uncategory])
    Work_Count[work] = count
print("Work_Count:", Work_Count)

#Exercise 12
exercise_text = "Within the content of Exercise section count how many words are in this section of the Lab."
exercise_word_count = len(exercise_text.split())
print("Word count in the Exercise section:", exercise_word_count)

#Exercise 13
word_count = {}
for word in exercise_text.split():
    word_count[word] = word_count.get(word, 0) + 1

sorted_word_count = sorted(word_count.items(), key=lambda x: x[1], reverse=True)
print("Word count occurrencesHere's the Python code that addresses the requirements outlined: ", sorted_word_count)