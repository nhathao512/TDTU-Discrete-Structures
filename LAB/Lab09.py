# -*- coding: utf-8 -*-
"""Lab09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aKrzPJjymrGLjhzvvfJQEgiUMt1uLxOi
"""

#Problem1

import networkx as nx
import matplotlib.pyplot as plt

G = nx.Graph()
G.add_edges_from(
    [('A', 'B'), ('A', 'C'), ('D', 'B'), ('E', 'C'), ('E', 'F'),
     ('B', 'H'), ('B', 'G'), ('B', 'F'), ('C', 'G')])

nx.draw(G)

plt.show()

#Problem2

import networkx as nx
import matplotlib.pyplot as plt

G = nx.DiGraph()
G.add_edges_from(
    [('A', 'B'), ('A', 'C'), ('D', 'B'), ('E', 'C'), ('E', 'F'),
     ('B', 'H'), ('B', 'G'), ('B', 'F'), ('C', 'G')])

nx.draw(G)

plt.show()

#Problem3

import networkx as nx
import matplotlib.pyplot as plt



G = nx.DiGraph()
G.add_edges_from(
    [('A', 'B'), ('A', 'C'), ('D', 'B'), ('E', 'C'), ('E', 'F'),
     ('B', 'H'), ('B', 'G'), ('B', 'F'), ('C', 'G')])

nx.draw(G, with_labels=True)

plt.show()

#Problem4

import networkx as nx
G = nx.Graph()
G.add_edge('A', 'B', weight=4)
G.add_edge('B', 'D', weight=2)
G.add_edge('A', 'C', weight=3)
G.add_edge('C', 'D', weight=4)
print(nx.shortest_path(G, 'A', 'D', weight='weight'))

#Exercise01

import networkx as nx
import matplotlib.pyplot as plt
A = nx.Graph()
A.add_edges_from(
    [('1', '4'),('4','2'),('3','4')])
nx.draw(A, with_labels=True)
plt.show()

B = nx.Graph()
B.add_edges_from(
    [('1', '2'),('2','3'),('3','4'),('4','1')])
nx.draw(B, with_labels=True)
plt.show()

C = nx.Graph()
C.add_edges_from(
    [('1', '2'),('2','4'),('4', '3'), ('1','3'),('4','1'), ('3', '2')])
nx.draw(C, with_labels=True)
plt.show()

D = nx.Graph()
D.add_edges_from(
    [('2', '3'),('3','1'),('1','4'),('4','2')])
nx.draw(D, with_labels=True)
plt.show()

E = nx.Graph()
E.add_edges_from(
    [('1', '2'),('2','4'),('4','3'),('3','1')])
nx.draw(E, with_labels=True)
plt.show()

#Exercise02
#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('A', 'B', weight=1)
G.add_edge('B', 'D', weight=2)
G.add_edge('B', 'E', weight=3)
G.add_edge('D', 'E', weight=5)
G.add_edge('A', 'E', weight=2)
G.add_edge('A', 'C', weight=4)
G.add_edge('C', 'F', weight=6)
G.add_edge('C', 'G', weight=7)
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, 'A', 'D', weight='weight'))

#Exercise03

#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('0', '1', weight=3)
G.add_edge('0', '3', weight=7)
G.add_edge('0', '4', weight=8)
G.add_edge('1', '3', weight=4)
G.add_edge('4', '3', weight=3)
G.add_edge('1', '2', weight=1)
G.add_edge('3', '2', weight=2)
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, '1', '4', weight='weight'))

#Exercise04

#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('v1', 'v2', weight=5)
G.add_edge('v1', 'v3', weight=6)
G.add_edge('v2', 'v3', weight=8)
G.add_edge('v2', 'v5', weight=8)
G.add_edge('v2', 'v4', weight=3)
G.add_edge('v3', 'v5', weight=6)
G.add_edge('v4', 'v5', weight=3)
G.add_edge('v4', 'v6', weight=7)
G.add_edge('v5', 'v6', weight=7)
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, 'v1', 'v4', weight='weight'))

#Exercise05

#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('2', '1', weight=0.63)
G.add_edge('2', '0', weight=0.14)
G.add_edge('2', '3', weight=0.31)
G.add_edge('3', '1', weight=0.35)
G.add_edge('0', '1', weight=0.54)
G.add_edge('1', '4', weight=0.30)
G.add_edge('0', '7', weight=0.47)
G.add_edge('1', '7', weight=0.31)
G.add_edge('3', '7', weight=0.13)
G.add_edge('3', '4', weight=0.54)
G.add_edge('4', '7', weight=0.54)
G.add_edge('3', '5', weight=0.43)
G.add_edge('4', '5', weight=0.54)
G.add_edge('4', '6', weight=0.62)
G.add_edge('5', '6', weight=0.37)
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, '2', '4', weight='weight'))

#Exercise06

#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('0', '1', weight=4)
G.add_edge('0', '7', weight=8)
G.add_edge('1', '7', weight=11)
G.add_edge('1', '2', weight=8)
G.add_edge('7', '8', weight=7)
G.add_edge('8', '2', weight=2)
G.add_edge('8', '6', weight=6)
G.add_edge('7', '6', weight=1)
G.add_edge('6', '5', weight=2)
G.add_edge('2', '5', weight=4)
G.add_edge('3', '5', weight=14)
G.add_edge('2', '3', weight=7)
G.add_edge('3', '4', weight=9)
G.add_edge('4', '5', weight=10)
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, '1', '4', weight='weight'))

#Exercise07

#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('Dunwich', 'Blaxhall', weight=15)
G.add_edge('Dunwich', 'Harwich', weight=53)
G.add_edge('Blaxhall', 'Harwich', weight=40)
G.add_edge('Blaxhall', 'Feering', weight=46)
G.add_edge('Feering', 'Tiptree', weight=3)
G.add_edge('Harwich', 'Tiptree', weight=31)
G.add_edge('Harwich', 'Clacton', weight=17)
G.add_edge('Feering', 'Maldon', weight=11)
G.add_edge('Tiptree', 'Maldon', weight=8)
G.add_edge('Tiptree', 'Clacton', weight=29)
G.add_edge('Maldon', 'Clacton', weight=40)
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, 'Maldon', 'Blaxhall', weight='weight'))

#Exercise08

#a
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edge('Chicago', 'New York City', weight=714)
G.add_edge('Chicago', 'Miami', weight=1381)
G.add_edge('Chicago', 'Los Angeles', weight=2014)
G.add_edge('Los Angeles', 'New York City', weight=2451)
G.add_edge('Miami', 'New York City', weight=1089)
G.add_edge('Los Angeles', 'Miami')
nx.draw(G, with_labels=True)

plt.show()

#b
print(nx.shortest_path(G, 'Chicago', 'New York City', weight='weight'))